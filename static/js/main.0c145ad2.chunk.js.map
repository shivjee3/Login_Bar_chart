{"version":3,"sources":["Home/Login.jsx","Home/BarChat.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onchange","e","setState","defineProperty","target","name","value","submitForm","preventDefault","_this$state","state","username","password","localStorage","setItem","loggedIn","userErr","passErr","getItem","react_default","a","createElement","react_router","to","className","onSubmit","type","placeholder","onChange","required","id","React","Component","BarCharts","_logout","valErr","dataA","dataB","dataC","dataD","dataE","data1","marks","onClick","toString","min","max","es6","width","height","data","margin","top","right","left","bottom","dataKey","domain","cursor","fill","App","react_router_dom","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c145ad2.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './login.css';\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state= {\r\n            username: \"\",\r\n            password: \"\",\r\n            userErr: \"\",\r\n            passErr: \"\",\r\n            loggedIn: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token !== \"\"){\r\n            this.setState({loggedIn: true});\r\n            \r\n        }\r\n    }\r\n\r\n    onchange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    submitForm=(e)=>{\r\n        e.preventDefault()\r\n        const {username,password}=this.state\r\n        if(username === \"demo\" && password === \"123\"){\r\n            localStorage.setItem(\"token\",\"akjfiurvkvig347fjs\")\r\n            this.setState({loggedIn:true})\r\n        }else{\r\n            this.setState({userErr:\"* Invalid username or password!!\"})\r\n        }\r\n    }\r\n\r\n    render(){\r\n       if(this.state.loggedIn){\r\n           return <Redirect to=\"/BarCharts\"/>\r\n       }\r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"sub-container\">\r\n                <h1>Login</h1>\r\n\r\n                <form onSubmit={this.submitForm}>\r\n                   \r\n                    <input className=\"inputs\" type=\"text\" placeholder=\"Username\" name=\"username\" value={this.state.username} onChange={this.onchange} required />\r\n                    <br/>\r\n                    <br/>\r\n                    <input className=\"inputs\" type=\"password\" placeholder=\"Password\" name=\"password\" value={this.state.password} onChange={this.onchange} required />\r\n                    \r\n                    <div id=\"err\" className=\"errormsg\">{this.state.userErr}</div>\r\n                    <input className=\"inputs\" type=\"submit\" value=\"Login\" />\r\n                    \r\n                </form>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {BarChart, Bar, XAxis,ResponsiveContainer, YAxis, Tooltip, Legend} from 'recharts';\r\n\r\nimport './barchat.css';\r\n\r\n\r\n\r\nclass BarCharts extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state = {\r\n      loggedIn:true,\r\n      valErr:\"\",\r\n      dataA: 5,\r\n      dataB: 10,\r\n      dataC: 18,\r\n      dataD: 8,\r\n      dataE: 13\r\n    }\r\n    const token = localStorage.getItem(\"token\") \r\n    if(token === \"\"){\r\n      this.state.loggedIn = false\r\n    }   \r\n  }\r\n\r\n  _logout=()=>{\r\n    localStorage.setItem(\"token\", \"\")\r\n    this.setState({loggedIn: false});\r\n    //return <Redirect to=\"/\" />\r\n  };\r\n\r\n  onchange=(e)=>{\r\n    if (e.target.value >= 5 && e.target.value <= 20) {\r\n      this.setState({[e.target.name]:e.target.value})\r\n      e.target.className = \"input1\";\r\n    } else {\r\n      e.target.className = \"input1 fail\";\r\n    }\r\n  } \r\n\r\n\r\n  render(){\r\n    if(this.state.loggedIn === false){\r\n      return <Redirect to=\"/\" />\r\n    }\r\n    var data1 = [\r\n      {\r\n        name: 'A', marks: this.state.dataA\r\n      },\r\n      {\r\n        name: 'B', marks: this.state.dataB\r\n      },\r\n      {\r\n        name: 'C', marks: this.state.dataC\r\n      },\r\n      {\r\n        name: 'D', marks: this.state.dataD\r\n      },\r\n      {\r\n        name: 'E', marks: this.state.dataE\r\n      },\r\n    ];\r\n    \r\n  return (\r\n   \r\n    <div className=\"container1\">\r\n      <header className=\"header\">\r\n        <span className=\"headertxt1\">BarChart</span>\r\n        <span className=\"headertxt2\" onClick={this._logout}>Logout</span>\r\n      </header>\r\n      <div className=\"inputall\">\r\n      <h2>Marks</h2>\r\n          <label>A : </label>\r\n          <input className=\"input1\" type=\"number\" placeholder={this.state.dataA.toString()} min=\"5\" max=\"20\" name=\"dataA\"  onChange={this.onchange} required />\r\n          <br/>\r\n          <label>B : </label>\r\n          <input className=\"input1\" type=\"number\" placeholder={this.state.dataB.toString()}  min=\"5\" max=\"20\" name=\"dataB\"  onChange={this.onchange} required />\r\n          <br/>\r\n          <label>C : </label>\r\n          <input className=\"input1\" type=\"number\" placeholder={this.state.dataC.toString()}  min=\"5\" max=\"20\" name=\"dataC\"   onChange={this.onchange} required />\r\n          <br/>\r\n          <label>D : </label>\r\n          <input className=\"input1\" type=\"number\" placeholder={this.state.dataD.toString()}  min=\"5\" max=\"20\" name=\"dataD\"   onChange={this.onchange} required />\r\n          <br/>\r\n          <label>E : </label>\r\n          <input className=\"input1\" type=\"number\" placeholder={this.state.dataE.toString()}  min=\"5\" max=\"20\" name=\"dataE\"  onChange={this.onchange} required />\r\n          <br/>\r\n      </div>\r\n    \r\n      <div className=\"chart\">  \r\n      <ResponsiveContainer width={500} height={350}>\r\n        <BarChart\r\n          data={data1}\r\n          margin={{\r\n            top: 5, right: 30, left: 20, bottom: 5,\r\n          }}>\r\n\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis type=\"number\" domain={[0 , 20]} />\r\n          <Tooltip cursor={false}  />\r\n          <Legend />\r\n          <Bar dataKey=\"marks\" fill=\"#8884d8\" />\r\n        </BarChart> \r\n        </ResponsiveContainer>     \r\n      </div>\r\n    </div>\r\n  );\r\n  }\r\n}\r\n\r\nexport default BarCharts;\r\n","import React from 'react';\nimport {BrowserRouter as Router,Route} from 'react-router-dom';\nimport Login from './Home/Login.jsx';\nimport BarCharts from './Home/BarChat.jsx';\n\nclass App extends React.Component {\n  render(){\n  return (\n    <Router>\n      <Route exact path=\"/\" component={Login} />\n      <Route path=\"/BarCharts\" component={BarCharts} />\n    </Router>\n  );\n  }\n}\n \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}